#!/usr/bin/env bash
set -o nounset
set -e

if hash realpath 2> /dev/null; then
    DIR="$( cd "$(dirname $(realpath "${BASH_SOURCE[0]}" ))" && pwd )";
elif hash readlink 2> /dev/null && [[ "$(uname -s)" != "Darwin" ]]; then
    DIR="$( cd "$(dirname $(readlink -f "${BASH_SOURCE[0]}" ))" && pwd )";
else
    DIR="$( cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd )";
fi

if [[ -e "lib.sh" ]]; then source "lib.sh"; fi
source "$DIR/lib.sh";


function print_usage() {
    echo "Usage: $0 [report-id]

";
}

function _show_report() {
    if [[ ! -e "var/report/$1" ]]; then
        lib::print_error "Report $1 does not exist";
        exit 1;
    fi
    echo "Show report: #$1";
    cat "var/report/$1";
}

function _get_latest() {
    local base="$1";
    ls -ltr "var/report/$base" | awk '{print $9}' | tail -n 1
}
function _show_latest() {
    local latest;
    latest="$(_get_latest '')"
    if [[ -d "var/report/$latest" ]]; then
        local report_subdirectory="$latest";
        _show_report "$report_subdirectory/$(_get_latest "$report_subdirectory")";
    else
        _show_report "$latest";
    fi
}

function run () {
    lib::go_to_magento_root;
    if [[ "$(lib::has_argument "-h" "$@")" == "true" ]] \
        || [[ "$(lib::has_argument "--help" "$@")" == "true" ]] \
        || [[ "$(lib::has_argument "help" "$@")" == "true" ]]; then
        print_usage;

        exit 0;
    fi

    if [[ "$#" -gt "0" ]]; then
        _show_report "$1";
    else
        _show_latest;
    fi
}

run "$@";
